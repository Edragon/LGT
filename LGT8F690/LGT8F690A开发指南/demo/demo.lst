

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Aug 24 18:49:20 2017

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text30,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,delta=2
     8                           	psect	text31,local,class=CODE,delta=2
     9                           	psect	text32,local,class=CODE,delta=2
    10                           	psect	pa_nodes,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  000A                     
    13                           	psect	text30
    14  0000                     __ptext30:	
    15  008F                     _OSCCON	set	143
    16  0085                     _TRISA	set	133
    17  0086                     _TRISB	set	134
    18  0087                     _TRISC	set	135
    19  011E                     _ANSEL	set	286
    20  0105                     _LATA	set	261
    21  0106                     _LATB	set	262
    22  0107                     _LATC	set	263
    23  019F                     _MCUCR	set	415
    24                           
    25                           	psect	cinit
    26  07D8                     start_initialization:	
    27  07D8                     end_of_initialization:	
    28                           ;End of C runtime variable initialization code
    29                           
    30  07D8  0183               	clrf	3
    31  07D9  118A  2FE4         	ljmp	_main	;jump to C main() function
    32                           
    33                           	psect	cstackCOMMON
    34  0000                     __pcstackCOMMON:	
    35  0000                     ?_OSC_init:	
    36  0000                     ??_OSC_init:	
    37                           ; 0 bytes @ 0x0
    38                           
    39  0000                     ??_main:	
    40                           ; 0 bytes @ 0x0
    41                           
    42  0000                     ?_main:	
    43                           ; 0 bytes @ 0x0
    44                           
    45                           
    46                           	psect	maintext
    47  07E4                     __pmaintext:	
    48                           ; 2 bytes @ 0x0
    49 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    50 ;;Auto spaces:   Size  Autos    Used
    51 ;; COMMON          14      0       0
    52 ;; BANK0           80      0       0
    53 ;; BANK1           80      0       0
    54 ;; BANK2           80      0       0
    55 ;;
    56 ;; Pointer list with targets:
    57 ;;
    58 ;; Critical Paths under _main in COMMON
    59 ;;
    60 ;;   None.
    61 ;;
    62 ;; Critical Paths under _main in BANK0
    63 ;;
    64 ;;   None.
    65 ;;
    66 ;; Critical Paths under _main in BANK1
    67 ;;
    68 ;;   None.
    69 ;;
    70 ;; Critical Paths under _main in BANK2
    71 ;;
    72 ;;   None.
    73 ;;
    74 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    75 ;;
    76 ;;
    77 ;;Call Graph Tables:
    78 ;;
    79 ;; ---------------------------------------------------------------------------------
    80 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
    81 ;; ---------------------------------------------------------------------------------
    82 ;; (0) _main                                                 0     0      0       0
    83 ;;                           _OSC_init
    84 ;; ---------------------------------------------------------------------------------
    85 ;; (1) _OSC_init                                             0     0      0       0
    86 ;; ---------------------------------------------------------------------------------
    87 ;; Estimated maximum stack depth 1
    88 ;; ---------------------------------------------------------------------------------
    89 ;; Call Graph Graphs:
    90 ;; _main (ROOT)
    91 ;;   _OSC_init
    92 ;;
    93 ;; Address spaces:
    94 ;;Name               Size   Autos  Total    Cost      Usage
    95 ;;BITCOMMON            E      0       0       0        0.0%
    96 ;;EEDATA             100      0       0       0        0.0%
    97 ;;NULL                 0      0       0       0        0.0%
    98 ;;CODE                 0      0       0       0        0.0%
    99 ;;COMMON               E      0       0       1        0.0%
   100 ;;BITSFR0              0      0       0       1        0.0%
   101 ;;SFR0                 0      0       0       1        0.0%
   102 ;;BITSFR1              0      0       0       2        0.0%
   103 ;;SFR1                 0      0       0       2        0.0%
   104 ;;STACK                0      0       1       2        0.0%
   105 ;;BANK0               50      0       0       3        0.0%
   106 ;;BITBANK1            50      0       0       4        0.0%
   107 ;;BITSFR3              0      0       0       4        0.0%
   108 ;;SFR3                 0      0       0       4        0.0%
   109 ;;BANK1               50      0       0       5        0.0%
   110 ;;BITSFR2              0      0       0       5        0.0%
   111 ;;SFR2                 0      0       0       5        0.0%
   112 ;;BITBANK2            50      0       0       6        0.0%
   113 ;;BANK2               50      0       0       7        0.0%
   114 ;;ABS                  0      0       0       8        0.0%
   115 ;;BITBANK0            50      0       0       9        0.0%
   116 ;;DATA                 0      0       0      10        0.0%
   117                           
   118                           
   119 ;; *************** function _main *****************
   120 ;; Defined at:
   121 ;;		line 24 in file "E:\demo\demo.c"
   122 ;; Parameters:    Size  Location     Type
   123 ;;		None
   124 ;; Auto vars:     Size  Location     Type
   125 ;;		None
   126 ;; Return value:  Size  Location     Type
   127 ;;                  2  1861[COMMON] int 
   128 ;; Registers used:
   129 ;;		wreg, status,2, status,0, pclath, cstack
   130 ;; Tracked objects:
   131 ;;		On entry : 17F/0
   132 ;;		On exit  : 0/0
   133 ;;		Unchanged: 0/0
   134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   135 ;;      Params:         0       0       0       0
   136 ;;      Locals:         0       0       0       0
   137 ;;      Temps:          0       0       0       0
   138 ;;      Totals:         0       0       0       0
   139 ;;Total ram usage:        0 bytes
   140 ;; Hardware stack levels required when called:    1
   141 ;; This function calls:
   142 ;;		_OSC_init
   143 ;; This function is called by:
   144 ;;		Startup code after reset
   145 ;; This function uses a non-reentrant model
   146 ;;
   147  07E4                     _main:	
   148                           
   149                           ;demo.c: 25: OSC_init();
   150                           
   151                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   152  07E4  118A  27DB  118A   	fcall	_OSC_init
   153                           
   154                           ;demo.c: 28: TRISA = 0x80;
   155  07E7  3080               	movlw	128
   156  07E8  1303               	bcf	3,6	;RP1=0, select bank1
   157  07E9  0085               	movwf	5	;volatile
   158                           
   159                           ;demo.c: 31: TRISB = 0x86;
   160  07EA  3086               	movlw	134
   161  07EB  0086               	movwf	6	;volatile
   162                           
   163                           ;demo.c: 33: TRISC = 0x00;
   164  07EC  0187               	clrf	7	;volatile
   165                           
   166                           ;demo.c: 35: ANSEL = 0x00;
   167  07ED  1283               	bcf	3,5	;RP0=0, select bank2
   168  07EE  1703               	bsf	3,6	;RP1=1, select bank2
   169  07EF  019E               	clrf	30	;volatile
   170  07F0                     l3102:	
   171                           
   172                           ;demo.c: 37: {
   173                           ;demo.c: 39: LATA = 0x80;
   174  07F0  3080               	movlw	128
   175  07F1  1283               	bcf	3,5	;RP0=0, select bank2
   176  07F2  1703               	bsf	3,6	;RP1=1, select bank2
   177  07F3  0085               	movwf	5	;volatile
   178                           
   179                           ;demo.c: 40: LATB = 0x86;
   180  07F4  3086               	movlw	134
   181  07F5  0086               	movwf	6	;volatile
   182                           
   183                           ;demo.c: 41: LATC = 0x00;
   184  07F6  0187               	clrf	7	;volatile
   185                           
   186                           ;demo.c: 42: _nop();
   187  07F7  0000               	nop
   188                           
   189                           ;demo.c: 45: LATA = 0xff;
   190  07F8  30FF               	movlw	255
   191  07F9  1283               	bcf	3,5	;RP0=0, select bank2
   192  07FA  1703               	bsf	3,6	;RP1=1, select bank2
   193  07FB  0085               	movwf	5	;volatile
   194                           
   195                           ;demo.c: 46: LATB = 0xff;
   196  07FC  0086               	movwf	6	;volatile
   197                           
   198                           ;demo.c: 47: LATC = 0xff;
   199  07FD  0087               	movwf	7	;volatile
   200                           
   201                           ;demo.c: 48: _nop();
   202  07FE  0000               	nop
   203  07FF  2FF0               	goto	l3102
   204  0800                     __end_of_main:	
   205                           
   206                           	psect	text31
   207  07DB                     __ptext31:	
   208 ;; =============== function _main ends ============
   209                           
   210                           
   211 ;; *************** function _OSC_init *****************
   212 ;; Defined at:
   213 ;;		line 15 in file "E:\demo\demo.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;		None
   218 ;; Return value:  Size  Location     Type
   219 ;;		None               void
   220 ;; Registers used:
   221 ;;		wreg, status,2, status,0
   222 ;; Tracked objects:
   223 ;;		On entry : 17F/0
   224 ;;		On exit  : 17F/60
   225 ;;		Unchanged: FFE80/0
   226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   227 ;;      Params:         0       0       0       0
   228 ;;      Locals:         0       0       0       0
   229 ;;      Temps:          0       0       0       0
   230 ;;      Totals:         0       0       0       0
   231 ;;Total ram usage:        0 bytes
   232 ;; Hardware stack levels used:    1
   233 ;; This function calls:
   234 ;;		Nothing
   235 ;; This function is called by:
   236 ;;		_main
   237 ;; This function uses a non-reentrant model
   238 ;;
   239  07DB                     _OSC_init:	
   240                           
   241                           ;demo.c: 17: OSCCON = 0x60;
   242                           
   243                           ; Regs used in _OSC_init: [wreg+status,2+status,0]
   244  07DB  3060               	movlw	96
   245  07DC  1683               	bsf	3,5	;RP0=1, select bank1
   246  07DD  008F               	movwf	15	;volatile
   247                           
   248                           ;demo.c: 19: MCUCR = 0x55;
   249  07DE  3055               	movlw	85
   250  07DF  1703               	bsf	3,6	;RP1=1, select bank3
   251  07E0  009F               	movwf	31	;volatile
   252                           
   253                           ;demo.c: 20: MCUCR = MCUCR & 0xf9;
   254  07E1  30F9               	movlw	249
   255  07E2  059F               	andwf	31,f	;volatile
   256  07E3  0008               	return
   257  07E4                     __end_of_OSC_init:	
   258                           
   259                           	psect	text32
   260  0000                     __ptext32:	
   261 ;; =============== function _OSC_init ends ============
   262                           
   263  007E                     btemp	set	126	;btemp
   264  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Aug 24 18:49:20 2017

                l3100 0000                  l3110 0000                  l3102 07F0                  l3112 0000  
                l3104 0000                  l3114 0000                  l3106 0000                  l3116 0000  
                l3108 0000                  l3090 0000                  l3092 0000                  l3094 0000  
                l3088 0000                  l3096 0000                  l3098 0000                  l1859 0000  
                _LATA 0105                  _LATB 0106                  _LATC 0107                  _main 07E4  
                btemp 007E                  start 0000                 ?_main 0000                 _ANSEL 011E  
               _MCUCR 019F                 _TRISA 0085                 _TRISB 0086                 _TRISC 0087  
    __end_of_OSC_init 07E4                 status 0003                 wtemp0 007E          __end_of_main 0800  
              ??_main 0000                _OSCCON 008F        __pcstackCOMMON 0000             ?_OSC_init 0000  
          __pmaintext 07E4            ??_OSC_init 0000  end_of_initialization 07D8     __size_of_OSC_init 0009  
 start_initialization 07D8              _OSC_init 07DB              __ptext30 0000              __ptext31 07DB  
            __ptext32 0000         __size_of_main 001C  
